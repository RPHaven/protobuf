<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: rphaven/common/v1/error.proto

namespace Rphaven\Common\V1;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Generated from protobuf message <code>rphaven.common.v1.Error</code>
 */
class Error extends \Google\Protobuf\Internal\Message
{
    /**
     * Generated from protobuf field <code>.rphaven.common.v1.Uid id = 1 [json_name = "id"];</code>
     */
    protected $id = null;
    /**
     * Generated from protobuf field <code>.google.protobuf.Timestamp timestamp = 2 [json_name = "timestamp"];</code>
     */
    protected $timestamp = null;
    /**
     * Generated from protobuf field <code>string reason = 3 [json_name = "reason"];</code>
     */
    protected $reason = '';
    /**
     * Generated from protobuf field <code>optional sint32 code = 4 [json_name = "code"];</code>
     */
    protected $code = null;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type \Rphaven\Common\V1\Uid $id
     *     @type \Google\Protobuf\Timestamp $timestamp
     *     @type string $reason
     *     @type int $code
     * }
     */
    public function __construct($data = NULL) {
        \Rphaven\Common\V1\GPBMetadata\Error::initOnce();
        parent::__construct($data);
    }

    /**
     * Generated from protobuf field <code>.rphaven.common.v1.Uid id = 1 [json_name = "id"];</code>
     * @return \Rphaven\Common\V1\Uid|null
     */
    public function getId()
    {
        return $this->id;
    }

    public function hasId()
    {
        return isset($this->id);
    }

    public function clearId()
    {
        unset($this->id);
    }

    /**
     * Generated from protobuf field <code>.rphaven.common.v1.Uid id = 1 [json_name = "id"];</code>
     * @param \Rphaven\Common\V1\Uid $var
     * @return $this
     */
    public function setId($var)
    {
        GPBUtil::checkMessage($var, \Rphaven\Common\V1\Uid::class);
        $this->id = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>.google.protobuf.Timestamp timestamp = 2 [json_name = "timestamp"];</code>
     * @return \Google\Protobuf\Timestamp|null
     */
    public function getTimestamp()
    {
        return $this->timestamp;
    }

    public function hasTimestamp()
    {
        return isset($this->timestamp);
    }

    public function clearTimestamp()
    {
        unset($this->timestamp);
    }

    /**
     * Generated from protobuf field <code>.google.protobuf.Timestamp timestamp = 2 [json_name = "timestamp"];</code>
     * @param \Google\Protobuf\Timestamp $var
     * @return $this
     */
    public function setTimestamp($var)
    {
        GPBUtil::checkMessage($var, \Google\Protobuf\Timestamp::class);
        $this->timestamp = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>string reason = 3 [json_name = "reason"];</code>
     * @return string
     */
    public function getReason()
    {
        return $this->reason;
    }

    /**
     * Generated from protobuf field <code>string reason = 3 [json_name = "reason"];</code>
     * @param string $var
     * @return $this
     */
    public function setReason($var)
    {
        GPBUtil::checkString($var, True);
        $this->reason = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>optional sint32 code = 4 [json_name = "code"];</code>
     * @return int
     */
    public function getCode()
    {
        return isset($this->code) ? $this->code : 0;
    }

    public function hasCode()
    {
        return isset($this->code);
    }

    public function clearCode()
    {
        unset($this->code);
    }

    /**
     * Generated from protobuf field <code>optional sint32 code = 4 [json_name = "code"];</code>
     * @param int $var
     * @return $this
     */
    public function setCode($var)
    {
        GPBUtil::checkInt32($var);
        $this->code = $var;

        return $this;
    }

}

